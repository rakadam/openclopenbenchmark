
//OpenCL
//MAX_GLOBAL_SIZE(0):-1
//MAX_GLOBAL_SIZE(1):1
//MAX_GLOBAL_SIZE(2):1
//MAX_LOCAL_SIZE(0):0
//MAX_LOCAL_SIZE(1):1
//MAX_LOCAL_SIZE(2):1
//MIN_LOCAL_SIZE:32

kernel void branch2(global int* buffer1, global int*buffer2, int buffer_size)
{
  int val = buffer1[get_global_id(0)];
  
  for(int j = 0; j < 512; j++)
  {
    switch (val%16)
    {
      case 0:
        val += (1*16)+1;
        break;
      case 1:
        val += (34*16)+1;
        break;
      case 2:
        val += (35*16)+1;
        break;
      case 3:
        val += (284*16)+1;
        break;
      case 4:
        val += (2486*16)+1;
        break;
      case 5:
        val += (145*16)+1;
        break;
      case 6:
        val += (234*16)+1;
        break;
      case 7:
        val += (1224*16)+1;
        break;
      case 8:
        val += (82365*16)+1;
        break;
      case 9:
        val += (123456*16)+1;
        break;
      case 10:
        val += (124*16)+1;
        break;
      case 11:
        val += (823*16)+1;
        break;
      case 12:
        val += (1178*16)+1;
        break;
      case 13:
        val += (141*16)+1;
        break;
      case 14:
        val += (134567*16)+1;
        break;
      case 15:
        val += (2429*16)+1;
        break;
      default:
        val += 1;
    }
  }
  
  buffer2[get_global_id(0)] = val;
}

//Gold

#ifndef __OPENCL_VERSION__

void branch2(void* buffer1, void* buffer2, int buffer_size)
{
  for (int i = 0; i <  buffer_size; i++)
  {
    int val = ((int*)buffer1)[i];
          
    ///we make sure here to don't let the control flow ever converge
    for(int j = 0; j < 512; j++)
    {
      switch (val%16)
      {
      case 0:
        val += (1*16)+1;
        break;
      case 1:
        val += (34*16)+1;
        break;
      case 2:
        val += (35*16)+1;
        break;
      case 3:
        val += (284*16)+1;
        break;
      case 4:
        val += (2486*16)+1;
        break;
      case 5:
        val += (145*16)+1;
        break;
      case 6:
        val += (234*16)+1;
        break;
      case 7:
        val += (1224*16)+1;
        break;
      case 8:
        val += (82365*16)+1;
        break;
      case 9:
        val += (123456*16)+1;
        break;
      case 10:
        val += (124*16)+1;
        break;
      case 11:
        val += (823*16)+1;
        break;
      case 12:
        val += (1178*16)+1;
        break;
      case 13:
        val += (141*16)+1;
        break;
      case 14:
        val += (134567*16)+1;
        break;
      case 15:
        val += (2429*16)+1;
        break;
      default:
        val += 1;
      }
    }
          
    ((int*)buffer2)[i] = val;
  }
}

#endif